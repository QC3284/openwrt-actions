
# https://github.com/QC3284/openwrt-actions
# File name: Build-X-lede.yml
#
# Copyright (c) 2024-2025 QC3284 <https://www.xcqcoo.top>
#
# This is free software, licensed under the GNU GPLv3 License.
# See /LICENSE for more information.
#
#本仓库及文件只在Github发布
#作者：QC3284@github.com(https://github.com/QC3284)
#本仓库地址：https://github.com/QC3284/openwrt-actions
#最后更新时间：2025.7.9

name: 编译lede (Compile lede)

on:
  schedule:
    - cron: 0 3 * * 3,6
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: "Dont care, and don't touch it!"
        required: true
        default: 'false'

env:
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo Start
        sleep 3
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        echo Done
        
    - name: 安装必要软件包 (Installation of necessary packages)
      run: |
        echo Start
        echo $(uname -a) 
        sleep 5
        sudo apt-get update
        sudo apt update
        sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential bzip2 ccache cmake cpio curl device-tree-compiler fastjar flex gawk gettext gcc-multilib g++-multilib git gperf haveged help2man intltool libc6-dev-i386 libelf-dev libfuse-dev libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses5-dev libncursesw5-dev libpython3-dev libreadline-dev libssl-dev libtool lrzsz mkisofs msmtp ninja-build p7zip p7zip-full patch pkgconf python2.7 python3 python3-pyelftools python3-setuptools qemu-utils rsync scons squashfs-tools subversion swig texinfo uglifyjs upx-ucl unzip vim wget xmlto xxd zlib1g-dev
        sudo apt-get install -y libfuse-dev neofetch 7zip
        sudo apt update
        sudo apt full-upgrade -y
        echo Done
        sleep 10

    - name: 拉取源码 (Pulling the source code)
      working-directory: /workdir
      run: |
        df -hT $PWD 
        git clone https://github.com/coolsnowwolf/lede.git openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        git pull
        
    - name: 下载横幅 (Download banner)
      run: |
        cd openwrt/package/base-files/files/etc/
        sudo rm -rf banner
        ls
        cp $GITHUB_WORKSPACE/config/lede-github-actions-banner.txt banner

    - name: 更新Feed (Update Feed)
      run: |
        cd openwrt
        bash $GITHUB_WORKSPACE/script/lede-github-actions-ip.sh
        ./scripts/feeds update -a
        
    - name: 安装Feed (Install Feed)
      run: |
         cd openwrt
         ./scripts/feeds install -a
         df -hT $PWD

    - name: 下载包 (Download package (dl library))
      run: |
         sudo neofetch
         cd openwrt
         make defconfig -j4
         bash $GITHUB_WORKSPACE/script/x-wrt-make-001.sh

    - name: 编译固件 (Compile Firmware)
      run: |
         cd openwrt
         sudo neofetch
         make -version
         gcc --version | head -n1
         sleep 10
         echo "开始编译"
         echo -e "$(nproc) thread compile"
         make -j$(nproc)  || make -j4 V=s || make -j4 V=99
         echo "status=success" >> $GITHUB_STATE
         grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
         [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
         echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
         echo "压缩bin目录...... (Compressing bin directories ......)"
         7zz a -mx=9 -mmt=8 bin.zip bin
         mv bin.zip bin/targets/ramips/mt7621/
         cd bin/targets/ramips/mt7621/
         echo "完成 (Finished.)"

    - name: 检查空间使用情况 (Check space usage)
      if: (!cancelled())
      run: df -hT

    - name:  上传bin目录 (Upload bin directory)
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: 整理文件 (Sort out documents)
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件目录 (Uploading Firmware Directory)
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: 生成发布标签 (Generate publish tags)
      id: tag
      run: |
        echo "release_tag=$(date +"%Y.%m.%d-%H%M-LEDE")" >> $GITHUB_OUTPUT
        touch release.txt
        bash $GITHUB_WORKSPACE/script/lede-github-actions-rl.sh
        echo "status=success" >> $GITHUB_OUTPUT

    - name: 上传固件以发布 (Upload firmware for release)
      uses: softprops/action-gh-release@v2
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
     
    - name: 删除旧版本和删除工作流运行 (Delete old version and Delete workflow run)
      uses: ophub/delete-releases-workflows@main
      with:
        delete_releases: true
        releases_keep_latest: 25
        delete_workflows: true
        workflows_keep_day: 30
        gh_token: ${{ secrets.GITHUB_TOKEN }}